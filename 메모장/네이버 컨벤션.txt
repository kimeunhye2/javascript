1.

<input>

<label> 요소, title 애트리뷰트, alt 애트리뷰트를 통해 스크린 리더 사용자는 주변 맥락에 대한 이해 없이 각
요소에 독립적으로 접근해도 폼을 이해할 수 있다.
<label for="user_id">아이디</label> <input type="text" id="user_id" name="user_id">
<input type="image" src="btn_confirm.gif" alt="확인">
<input type="text" id="num1" name="num1" title="지역번호">
<input type="text" id="num2" name="num" title="국번">
<input type="text" id="num3" name=”num” title="전화번호">

다음과 같이 type값에 따라 애트리뷰트를 선언한다.
• type이 text인 경우
− 동일한 스타일의 텍스트필드이나 너비값이 다를 경우 style 애트리뷰트를 이용하여 width값을
제어한다.
− type이 radio, checkbox인 경우그루핑이 필요하면 선택적으로 name 애트리뷰트를 이용하여
항목들을 그루핑한다.
− 기본 선택에 대한 표현이 필요할 경우 checked="checked"라고 표기한다.
• type이 image인 경우
− alt 애트리뷰트를 반드시 선언한다.
<input type="image" src="img/btn_confirm.gif" alt="확인">
4. HTML 요소 작성 규칙
• type 이 file인 경우: type 애트리뷰트를 선언한다.
<input type="file">
• type 이 button, reset, submit 인 경우: type 애트리뷰트를 선언한다.
<input type="button">

2.

<select>

동일한 스타일의 셀렉트 박스이나 너비값이 다르면 선택적으로 style 애트리뷰트를 이용하여 width값을
제어한다.
<label for="grade">등급</label>
<select id="grade" style="width:100px">
<option>1등급</option>
<option>2등급</option>
</select>
<select title="등급" style="width:100px">
<option>등급</option>
</select>


3.

<label>

<input>(text, checkbox, radio, file, password), <select>, <textarea>와 같은 폼 요소는 for 애트리뷰트를
부여하여 해당 요소의 id값과 동일한 이름으로 연결(coupling)한다. 단, 레이블 명이 위치할 공간이 없는
경우 title 애트리뷰트로 대체할 수 있다.
<input type="radio" name="alignment" id="align_left"> <label
for="align_lft">왼쪽정렬</label>
<input type="checkbox" name="sports" id="soccer"> <label for="soccer">축구</label>
단, <label> 안에 <input> 앨리먼트가 있는 경우 for와 id를 이용하여 연결하지 않아도 된다.
<label><input type="checkbox" name="sports">축구</label>

4.

<textarea>

cols, rows 애트리뷰트를 선언한다.
CSS를 정상적으로 불러오지 못하는 상황에서도 사용에 문제가 없도록 cols, rows의 애트리뷰트값은 각각
최소 30, 5 이상이 되도록 선언한다. <label>로 연결(coupling) 할 수 없는 경우 title을 사용하여도 무방하며
id, title 애트리뷰트를 선언한다.
<textarea cols="30" rows="5" (id=" ") (title=" ")></textarea>

5.

<a>

href, target, title 애트리뷰트를 선택적으로 선언한다.
• 새 창으로 페이지를 표시해야 할 때 target 애트리뷰트를 선택적으로 사용한다.
• title 애트리뷰트는 예고 없이 새 창을 표시해야 하거나 이동 경로를 정확히 알 수 없을 때, 또는
브라우저에 독립적으로 툴팁을 표현하기 위해 사용한다.
<a href="print.nhn" target="_blank" title="새창">인쇄하기</a>
참고
HTML5 에서의 <a>
 HTML5에서의 <a> 요소 안에 블록 속성의 요소를 포함할 수 있다.

6.

<iframe>

<iframe>은 페이지 성능에 영향을 주기 때문에 가급적 사용하지 않는다.
• 부득이하게 사용해야 할 경우 src, width, height, title, frameborder, marginwidth, marginheight,
scrolling 애트리뷰트를 선언한다.
• 스크린 리더 사용자를 위해 title 애트리뷰트에 제목을 표기한다. 상단에 iframe의 heading 요소가 있는
경우더라도 반드시 title을 선언한다.
• Iframe의 내용이 빈 경우더라도 빈 아이프레임라는 것을 사용자에게 알려주도록 한다.
<iframe src="nbox.html" width="410" height="800" title="공지사항 게시판" frameborder="0"
marginwidth="0" marginheight="0" scrolling="no"></iframe>

7.


영문 소문자, 숫자, 언더스코어 조합
• 영문 소문자, 숫자, 언더스코어(_)만 사용할 수 있다.
• 언더스코어(_)는 단어와 단어 조합할 때만 사용한다.
• 언더스코어(_)가 포함된 약속어는 숫자, 영문 소문자와 조합하여 사용할 수 있다.
표 2-2 네이밍 조합 예
기본형 잘못된 예           올바른 예
section sectionList         section_list
no                         - no1, no2, no3 …. no10

8.

id, class

• id는 문서 전체의 고유 식별자 이므로 한 문서에서 동일한 id를 여러 번 사용하지 않는다.
• 레이아웃을 제외한 id는 스타일을 지정하지 않는다.
• class는 문서에서 여러 번 사용할 수 있다.

9.

A. 파일 및 폴더 네이밍
• 표 2-8 파일 및 폴더 네이밍 규칙을 따른다.
표 2-8 파일 및 폴더 네이밍 규칙 예
분류                      예제                         설명
HTML                news.html           '서비스영문이름.html' 로 사용
                       pop_.html                팝업 파일을 사용
                   ifr_.html iframe                 파일을 사용
Inc_.html Include                                      파일
tmp_.html                                  임시파일을 사용(QP 예외규칙)
CSS                   news.css          '서비스영문이름.css'로 사용한다.
                      news_e.css      모바일 예외 대응시 ‘모바일 CSS 파일 분기 규칙’에 따
라 사용한다.
                   Folder p_yymmdd_      프로젝트이름 신규 프로젝트 작업 시 사용
                        s_yymmdd_          서스테이닝이름 서스테이닝 작업 시 사용
                       img, css, js                 image, css, javascript 폴더 사용
              p_yymmdd_프로젝트명\메뉴명    HTML 파일의 폴더 분류가 필요한 경우 사용
                              tmp_                        임시파일의 폴더 분류가 필요한 경우 사용(QP 예외규
칙)


10.


들여쓰기 규칙


들여쓰기를 하면 코드의 가독성이 높아지고 전체 HTML 구조를 쉽게 파악할 수 있다. 다음과 같은 들여쓰기
규칙을 준수한다.
마크업의 중첩이 깊어질 때마다 자식 요소는 1탭 들여 쓰고, 1탭의 크기는 공백 4칸으로 설정한다. 문서
내에서 반드시 탭을 이용하여 들여쓰기를 하며, 탭을 대신하여 공백으로 띄어 들여쓰지 않는다. 또한 다음의
경우에는 중첩 단계의 파악이 용이하도록 들여쓰지 않는다.
• <html>의 자식 요소인 <head>, <body>
• <head>의 자식 요소
• <body>의 자식 요소
• <table>의 자식 요소인 <caption>, <colgroup>, <col>, <thead>, <tbody>, <tfoot>, <tr>,<th>, <td>
• <ul>, <ol>, <dl>의 자식 요소인 <li>, <dt>, <dd> 요소
• <fieldset>의 자식 요소인 <legend>
• <map>의 자식 요소인 <area>


11.

<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="utf-8">
<title>메뉴 : 브랜드명 서비스</title>
<link rel="stylesheet" type="text/css" href="sevice_name.css">
</head>
<body>
<div id="wrap">
<!-- u_skip -->
<div id="u_skip">
</div>
<!-- //u_skip -->
 <!-- header -->
 <div id="header">
 </div>
 <!-- //header -->
 <!-- container -->
 <div id="container">
 <!-- content -->
 <div id="content">
 </div>
 <!-- //content -->
 </div>
 <!-- //container -->
 <!-- footer -->
 <div id="footer">
 </div>
 <!-- //footer -->
</div>
</body>
</html>

12.

기본 규칙
특정 요소에 class, style을 선언할 때는 선언 순서를 준수한다. 다음과 같이 class와 style은 제일 뒷부분에
선언한다.

<input type="text" id="user_id" title="사용자ID" class="input_txt" style="width:100px">
